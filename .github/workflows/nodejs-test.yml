name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    # Service containers to run with `container-job`
    services:
      server:
        image: betro/server:latest
        ports:
          - "4000:4000"
        environment:
          POSTGRES_URI: postgres://betro:betro@postgres:5432/betro
          REDIS_URI: redis://redis:6379
          SECRET: 7c6626f1-2f52-4629-ae09-7d43453f3a01
          NODE_ENV: production
          LOGGER_LEVEL: info
          ENABLE_RATE_LIMIT: "false"
          PORT: 4000
        links:
          - redis
          - postgres
      migration:
        image: betro/server:latest
        command:
          [
            "./wait-for-it/wait-for-it.sh",
            "postgres:5432",
            "--",
            "node",
            "dist/scripts/migration.js",
          ]
        environment:
          POSTGRES_URI: postgres://betro:betro@postgres:5432/betro
        links:
          - postgres
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    strategy:
      matrix:
        node-version: [12.x, 14.x, 15.x, 16.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm run test
      - uses: codecov/codecov-action@v1
        with:
          env_vars: NODE_VERSION
        env:
          NODE_VERSION: ${{ matrix.node-version }}
      - uses: paambaati/codeclimate-action@v2.7.5
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
